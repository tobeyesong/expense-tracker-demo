{"version":3,"sources":["components/Header.js","utils/format.js","context/AppReducer.js","context/GlobalState.js","components/Cards.js","components/TransactionList.js","screens/DashboardScreen.js","screens/TrendScreen.js","history.js","components/Modals/AddTransactionModal.js","components/Modals/StandardModal.js","components/Modals/DeleteTransactionModal.js","App.js","index.js"],"names":["Header","className","src","alt","aria-hidden","to","type","numberWithCommas","x","toString","replace","state","action","transactions","filter","transaction","id","payload","totalTransactionCount","initialState","name","href","category","amount","currency","status","date","datetime","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","useEffect","length","Provider","value","deleteTransaction","addTransaction","cardStyles","balance","income","expense","classNames","classes","Boolean","join","Cards","amounts","useContext","map","total","reduce","acc","item","Number","toFixed","cards","icon","ScaleIcon","style","CurrencyDollarIcon","TrendingDownIcon","card","categoryStyles","TransactionList","dateTime","aria-label","Dashboard","TrendScreen","createBrowserHistory","required","undefined","mustBeNumber","isNaN","CreateTransactionModal","props","history","useHistory","useState","open","setOpen","cancelButtonRef","useRef","DashboardScreen","Root","show","as","Fragment","static","initialFocus","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","onSubmit","values","newTransaction","Math","floor","random","push","render","handleSubmit","submitError","component","placeholder","validate","input","meta","error","touched","Modal","Title","title","content","actions","DeleteTransactionModal","match","transactionId","params","onClick","ref","App","exact","path","AddTransactionModal","EditTransactionModal","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7f38879.chunk.js","sourcesContent":["/** @format */\n\nimport React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { CheckCircleIcon, OfficeBuildingIcon } from \"@heroicons/react/solid\";\n\nexport const Header = () => {\n  return (\n    <main className='relative z-0 flex-1 pb-8 overflow-y-auto'>\n      {/* Page header */}\n      <div className='bg-white shadow'>\n        <div className='px-4 sm:px-6 lg:max-w-6xl lg:mx-auto lg:px-8'>\n          <div className='py-6 md:flex md:items-center md:justify-between lg:border-t lg:border-gray-200'>\n            <div className='flex-1 min-w-0'>\n              {/* Profile */}\n              <div className='flex items-center'>\n                <img\n                  className='hidden w-16 h-16 rounded-full sm:block'\n                  src='https://images.unsplash.com/photo-1621784564114-6eea05b89863?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2.6&w=256&h=256&q=80'\n                  alt=''\n                />\n                <div>\n                  <div className='flex items-center'>\n                    <img\n                      className='w-16 h-16 rounded-full sm:hidden'\n                      src='https://images.unsplash.com/photo-1621784564114-6eea05b89863?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2.6&w=256&h=256&q=80'\n                      alt=''\n                    />\n                    <h1 className='ml-3 text-2xl leading-7 text-gray-900 sm:leading-9 sm:truncate'>\n                      Good morning, Emma Bridger\n                    </h1>\n                  </div>\n                  <dl className='flex flex-col mt-6 sm:ml-3 sm:mt-1 sm:flex-row sm:flex-wrap'>\n                    <dt className='sr-only'>Company</dt>\n                    <dd className='flex items-center text-sm font-medium text-gray-500 capitalize sm:mr-6'>\n                      <OfficeBuildingIcon\n                        className='flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400'\n                        aria-hidden='true'\n                      />\n                      Los Angeles\n                    </dd>\n                    <dt className='sr-only'>Account status</dt>\n                    <dd className='flex items-center mt-3 text-sm font-medium text-gray-500 capitalize sm:mr-6 sm:mt-0'>\n                      <CheckCircleIcon\n                        className='flex-shrink-0 mr-1.5 h-5 w-5 text-green-400'\n                        aria-hidden='true'\n                      />\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n            <div className='flex mt-6 space-x-3 md:mt-0 md:ml-4'>\n              <Link\n                to='/transactions/add'\n                type='button'\n                className='inline-flex items-center px-4 py-2 text-sm font-medium text-white transition duration-200 ease-in bg-blue-600 border border-transparent rounded-md shadow hover:shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'>\n                Add Transaction\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","/** @format */\n\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","/** @format */\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    case \"SET_TRANSACTION_COUNT\":\r\n      return {\r\n        ...state,\r\n        totalTransactionCount: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/** @format */\r\n\r\nimport React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n//Initial State\r\nconst initialState = {\r\n  transactions: [\r\n    {\r\n      id: \"1\",\r\n      name: \"Rent\",\r\n      href: \"#\",\r\n      category: \"expense\",\r\n      amount: -1000,\r\n      currency: \"USD\",\r\n      status: \"processing\",\r\n      date: \"July 1, 2020\",\r\n      datetime: \"2020-07-11\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: \"IRS\",\r\n      href: \"#\",\r\n      category: \"income\",\r\n      amount: 5000,\r\n      currency: \"USD\",\r\n      status: \"success\",\r\n      date: \"July 18, 2020\",\r\n      datetime: \"2020-07-18\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      name: \"Paypal\",\r\n      href: \"#\",\r\n      category: \"income\",\r\n      amount: 15000,\r\n      currency: \"USD\",\r\n      status: \"success\",\r\n      date: \"July 18, 2020\",\r\n      datetime: \"2020-07-18\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      name: \"AT&T\",\r\n      href: \"#\",\r\n      category: \"expense\",\r\n      amount: -2000,\r\n      currency: \"USD\",\r\n      status: \"success\",\r\n      date: \"July 11, 2020\",\r\n      datetime: \"2020-07-11\",\r\n    },\r\n  ],\r\n  totalTransactionCount: 4,\r\n};\r\n\r\n//Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  const { totalTransactionCount, transactions } = state;\r\n\r\n  //Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: transaction,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"SET_TRANSACTION_COUNT\",\r\n      payload: transactions.length,\r\n    });\r\n  }, [transactions]);\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        totalTransactionCount,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","/** @format */\n\n// /** @format */\n\nimport React, { useContext } from \"react\";\n\nimport { numberWithCommas } from \"../utils/format\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nimport {\n  ScaleIcon,\n  CurrencyDollarIcon,\n  TrendingDownIcon,\n} from \"@heroicons/react/outline\";\nconst cardStyles = {\n  balance: \"border border-blue-300\",\n  income: \"border border-green-300\",\n  expense: \"border border-red-300\",\n};\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nconst Cards = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  //BALANCE\n  const total = amounts\n    .reduce((acc, item) => Number(acc) + Number(item), 0)\n    .toFixed(2);\n\n  //INCOME\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += +item), 0)\n    .toFixed(2);\n\n  //EXPENSE\n  const expense = amounts\n    .filter((item) => item < 0)\n    .reduce((acc, item) => (acc += +item), 0)\n    .toFixed(2);\n\n  const cards = [\n    {\n      name: \"Balance\",\n      href: \"#\",\n      icon: ScaleIcon,\n      amount: total,\n      style: \"balance\",\n    },\n    {\n      name: \"Income\",\n      href: \"#\",\n      icon: CurrencyDollarIcon,\n      amount: income,\n      style: \"income\",\n    },\n    {\n      name: \"Expense\",\n      href: \"#\",\n      icon: TrendingDownIcon,\n      amount: expense,\n      style: \"expense\",\n    },\n  ];\n\n  return (\n    <div className='mt-8'>\n      <div className='max-w-6xl px-4 mx-auto sm:px-6 lg:px-8'>\n        <h2 className='text-lg font-medium leading-6 text-gray-900'>\n          Overview\n        </h2>\n        <>\n          <div className='grid grid-cols-1 gap-5 mt-2 sm:grid-cols-2 lg:grid-cols-3'>\n            {/* Card */}\n            {cards.map((card) => (\n              <div\n                key={card.name}\n                className='overflow-hidden transition duration-200 ease-in bg-white rounded-lg shadow hover:shadow-lg'>\n                <div className={classNames(cardStyles[card.style], \"p-3\")}>\n                  <div className='flex items-center '>\n                    <div className='flex-shrink-0'>\n                      <card.icon\n                        className='w-6 h-6 text-gray-400'\n                        aria-hidden='true'\n                      />\n                    </div>\n                    <div className='flex-1 w-0 ml-5'>\n                      <dl>\n                        <dt className='text-sm font-medium truncate '>\n                          {card.name}\n                        </dt>\n                        <dd>\n                          <div className='text-lg font-medium text-gray-900'>\n                            $ {numberWithCommas(card.amount)}\n                          </div>\n                        </dd>\n                      </dl>\n                    </div>\n                  </div>\n                </div>\n                <div className='px-5 py-3 bg-gray-50'>\n                  <div className='text-sm'>\n                    <a\n                      href={card.href}\n                      className='font-mediumover:text-cyan-900'>\n                      View all\n                    </a>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n","/** @format */\n/** @format */\n\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nimport { numberWithCommas } from \"../utils/format\";\n\nimport {\n  CashIcon,\n  TrashIcon,\n  ChevronRightIcon,\n} from \"@heroicons/react/outline\";\n\nconst categoryStyles = {\n  expense: \"border-r-4 pl-2 border-l-4 border-red-600\",\n  income: \"border-r-4 pl-2 mr-4 border-l-4 border-green-600\",\n};\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nconst TransactionList = () => {\n  const { transactions, totalTransactionCount } = useContext(GlobalContext);\n\n  return (\n    <div className='mt-8'>\n      <h2 className='max-w-6xl px-4 mx-auto mt-8 text-lg font-medium leading-6 text-gray-900 sm:px-6 lg:px-8'>\n        Recent activity\n      </h2>\n\n      <>\n        {/* TRASACTION LIST MOBILE ONLY */}\n        <div className='shadow sm:hidden'>\n          <ul className='mt-2 overflow-hidden divide-y divide-gray-200 shadow sm:hidden'>\n            {transactions.map((transaction) => (\n              <li key={transaction.id}>\n                <a\n                  href={transaction.href}\n                  className='block px-4 py-4 bg-white hover:bg-gray-50'>\n                  <span className='flex items-center space-x-4'>\n                    <span className='flex flex-1 space-x-2 truncate'>\n                      <CashIcon\n                        className='flex-shrink-0 w-5 h-5 text-gray-400'\n                        aria-hidden='true'\n                      />\n                      <span className='flex flex-col text-sm text-gray-500 truncate'>\n                        <span className='truncate'>{transaction.name}</span>\n                        <span>\n                          <span className='font-medium text-gray-900'>\n                            ${numberWithCommas(transaction.amount)}\n                          </span>\n                          {transaction.currency}\n                        </span>\n                        <time dateTime={transaction.datetime}>\n                          {transaction.datetime}\n                        </time>\n                      </span>\n                    </span>\n                    <ChevronRightIcon\n                      className='flex-shrink-0 w-5 h-5 text-gray-400'\n                      aria-hidden='true'\n                    />\n                  </span>\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* //TRANSACTION TABLE SMALL AND UP*/}\n        <div className='hidden sm:block'>\n          <div className='max-w-6xl px-4 mx-auto sm:px-6 lg:px-8'>\n            <div className='flex flex-col mt-2'>\n              <div className='min-w-full overflow-hidden overflow-x-auto align-middle shadow sm:rounded-lg'>\n                <table className='min-w-full divide-y divide-gray-200'>\n                  <thead>\n                    <tr>\n                      <th className='px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase bg-gray-50'>\n                        Transaction\n                      </th>\n                      <th className='px-6 py-3 text-xs font-medium tracking-wider text-right text-gray-500 uppercase bg-gray-50'>\n                        Amount\n                      </th>\n                      <th className='hidden px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase bg-gray-50 md:block'>\n                        Action\n                      </th>\n                      <th className='px-6 py-3 text-xs font-medium tracking-wider text-right text-gray-500 uppercase bg-gray-50'>\n                        Date\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className='bg-white divide-y divide-gray-200'>\n                    {transactions.map((transaction) => (\n                      <tr key={transaction.id} className='bg-white'>\n                        <td className='w-full px-6 py-4 text-sm text-gray-900 max-w-0 whitespace-nowrap'>\n                          <div\n                            className={classNames(\n                              categoryStyles[transaction.category],\n                              \"bg-white\",\n                              \"flex\"\n                            )}>\n                            <a\n                              href={transaction.href}\n                              className='inline-flex space-x-2 text-sm truncate group'>\n                              <CashIcon\n                                className='flex-shrink-0 w-5 h-5 text-gray-400 group-hover:text-gray-500'\n                                aria-hidden='true'\n                              />\n                              <p className='text-gray-500 truncate group-hover:text-gray-900'>\n                                {transaction.name}\n                              </p>\n                            </a>\n                          </div>\n                        </td>\n                        <td className='px-6 py-4 text-sm text-right text-gray-500 whitespace-nowrap'>\n                          <span className='font-medium text-gray-900'>\n                            ${numberWithCommas(transaction.amount)}\n                          </span>\n                          {transaction.currency}\n                        </td>\n                        <td className='hidden px-6 py-4 text-sm text-gray-500 whitespace-nowrap md:block'>\n                          <span className='inline-flex items-center p-1 font-medium '>\n                            <Link to={`/transactions/${transaction.id}/delete`}>\n                              <TrashIcon\n                                className='w-5 h-5 rounded-md hover:bg-red-600 hover:text-gray-100'\n                                aria-hidden='true'\n                              />{\" \"}\n                            </Link>\n                          </span>\n                        </td>\n\n                        <td className='px-6 py-4 text-sm text-right text-gray-500 whitespace-nowrap'>\n                          <time dateTime={transaction.datetime}>\n                            {transaction.datetime}\n                          </time>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                {/* Pagination */}\n                <nav\n                  className='flex items-center justify-between px-4 py-3 bg-white border-t border-gray-200 sm:px-6'\n                  aria-label='Pagination'>\n                  <div className='hidden sm:block'>\n                    <p className='text-sm text-gray-700'>\n                      Showing{\" \"}\n                      <span className='font-medium'>{`${totalTransactionCount}`}</span>{\" \"}\n                      total result(s)\n                    </p>\n                  </div>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    </div>\n  );\n};\n\nexport default TransactionList;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Header } from \"../components/Header\";\n\nimport Cards from \"../components/Cards\";\nimport TransactionList from \"../components/TransactionList\";\n\nconst Dashboard = () => {\n  return (\n    <div className='mt-8'>\n      <Header />\n      <Cards />\n      <TransactionList />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport PieChart from \"../components/Chart/PieChart\";\r\n\r\nconst TrendScreen = () => {\r\n  return (\r\n    <div>\r\n      <PieChart />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrendScreen;\r\n","/** @format */\r\n\r\nimport { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","/** @format */\n\n// /** @format */\nimport React from \"react\";\nimport { Fragment, useState, useContext, useRef } from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { XCircleIcon, PlusCircleIcon } from \"@heroicons/react/solid\";\n\nimport { Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nimport DashboardScreen from \"../../screens/DashboardScreen\";\n\nconst required = (value) => (value ? undefined : \"Required\");\nconst mustBeNumber = (value) => (isNaN(value) ? \"Must be a number\" : undefined);\n\nconst CreateTransactionModal = (props) => {\n  const history = useHistory();\n  const { addTransaction } = useContext(GlobalContext);\n  const [open, setOpen] = useState(true);\n  const cancelButtonRef = useRef(null);\n\n  if (!open) {\n    return <Redirect to='/' />;\n  }\n  const onSubmit = (values) => {\n    const newTransaction = {\n      id: Math.floor(Math.random() * 10000) + \"\",\n      ...values,\n    };\n\n    addTransaction(newTransaction);\n    history.push(\"/\");\n  };\n\n  return (\n    <Fragment>\n      <DashboardScreen />\n      <Transition.Root show={open} as={Fragment}>\n        <Dialog\n          as='div'\n          static\n          className='fixed inset-0 z-10 overflow-y-auto'\n          initialFocus={cancelButtonRef}\n          open={open}\n          onClose={setOpen}>\n          <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\n            <Transition.Child\n              as={Fragment}\n              enter='ease-out duration-300'\n              enterFrom='opacity-0'\n              enterTo='opacity-100'\n              leave='ease-in duration-200'\n              leaveFrom='opacity-100'\n              leaveTo='opacity-0'>\n              <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75 ' />\n            </Transition.Child>\n\n            {/* This element is to trick the browser into centering the modal contents. */}\n            <span\n              className='hidden sm:inline-block sm:align-middle sm:h-screen'\n              aria-hidden='true'>\n              &#8203;\n            </span>\n            <Transition.Child\n              as={Fragment}\n              enter='ease-out duration-300'\n              enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n              enterTo='opacity-100 translate-y-0 sm:scale-100'\n              leave='ease-in duration-200'\n              leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n              leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\n              <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6'>\n                <h3 className='text-xl '>Add new transaction</h3>\n                <hr />\n\n                <Form\n                  onSubmit={onSubmit}\n                  render={({ handleSubmit, submitError }) => (\n                    <form\n                      className='mt-8 mb-4 space-y-6'\n                      onSubmit={handleSubmit}>\n                      <div className='p-4 border-2 border-gray-100 rounded-md shadow-sm'>\n                        <Field\n                          name='name'\n                          component='input'\n                          placeholder='Name Transaction'\n                          validate={required}>\n                          {({ input, meta, placeholder }) => (\n                            <div>\n                              <input\n                                {...input}\n                                placeholder={placeholder}\n                                className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                              />\n                              {meta.error && meta.touched && (\n                                <div className='p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md bg-red-50'>\n                                  <div className='flex'>\n                                    <div className='flex-shrink-0'>\n                                      <XCircleIcon\n                                        className='w-5 h-5 text-red-400'\n                                        aria-hidden='true'\n                                      />\n                                    </div>\n                                    <div className='ml-3'>\n                                      <h3 className='text-sm font-medium text-red-800'>\n                                        {meta.error}\n                                      </h3>\n                                    </div>\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </Field>\n\n                        <Field\n                          name='amount'\n                          component='input'\n                          placeholder='Enter Amount'\n                          validate={(required, mustBeNumber)}>\n                          {({ input, meta, placeholder }) => (\n                            <div>\n                              <input\n                                {...input}\n                                placeholder={placeholder}\n                                className='block w-full px-4 py-2 pl-1 mb-2 border-2 border-gray-300 rounded-md shadow text-l focus:outline-none border-gray focus:border-blue-500'\n                              />\n                              {meta.error && meta.touched && (\n                                <div className='p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md bg-red-50'>\n                                  <div className='flex'>\n                                    <div className='flex-shrink-0'>\n                                      <XCircleIcon\n                                        className='w-5 h-5 text-red-400'\n                                        aria-hidden='true'\n                                      />\n                                    </div>\n                                    <div className='ml-3'>\n                                      <h3 className='text-sm font-medium text-red-800'>\n                                        {meta.error}\n                                      </h3>\n                                    </div>\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </Field>\n\n                        <Field\n                          name='category'\n                          component='input'\n                          validate={required}>\n                          {({ input, meta }) => (\n                            <div>\n                              <div className='cursor-pointer '>\n                                <label className='pr-3 '>\n                                  <Field\n                                    name='category'\n                                    component='input'\n                                    type='radio'\n                                    value='income'\n                                  />{\" \"}\n                                  Income\n                                </label>\n                                <label>\n                                  <Field\n                                    name='category'\n                                    component='input'\n                                    type='radio'\n                                    value='expense'\n                                  />{\" \"}\n                                  Expense\n                                </label>\n                              </div>\n\n                              {meta.error && meta.touched && (\n                                <div className='p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md bg-red-50'>\n                                  <div className='flex'>\n                                    <div className='flex-shrink-0'>\n                                      <XCircleIcon\n                                        className='w-5 h-5 text-red-400'\n                                        aria-hidden='true'\n                                      />\n                                    </div>\n                                    <div className='ml-3'>\n                                      <h3 className='text-sm font-medium text-red-800'>\n                                        {meta.error}\n                                      </h3>\n                                    </div>\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </Field>\n\n                        {submitError && (\n                          <div className='p-1 mt-1 mb-2 transition duration-500 ease-in-out rounded-md bg-red-50'>\n                            <div className='flex'>\n                              <div className='flex-shrink-0'>\n                                <XCircleIcon\n                                  className='w-5 h-5 text-red-400'\n                                  aria-hidden='true'\n                                />\n                              </div>\n                              <div className='ml-3'>\n                                <h3 className='text-sm font-medium text-red-800'>\n                                  {submitError}\n                                </h3>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n\n                      <div>\n                        <button\n                          type='submit'\n                          className='relative flex justify-center w-full px-4 py-2 text-lg text-white bg-indigo-600 border border-transparent rounded-md shadow-lg font-regular group hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'>\n                          <span className='absolute inset-y-0 left-0 flex items-center pl-3'>\n                            <PlusCircleIcon\n                              className='w-5 h-5 text-indigo-500 group-hover:text-indigo-400'\n                              aria-hidden='true'\n                            />\n                          </span>\n                          Add Transaction\n                        </button>\n                      </div>\n                    </form>\n                  )}\n                />\n              </div>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </Fragment>\n  );\n};\n\nexport default CreateTransactionModal;\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Fragment, useRef, useState } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { ExclamationIcon } from \"@heroicons/react/outline\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function Modal(props) {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  if (!open) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as='div'\r\n        static\r\n        className='fixed inset-0 z-10 overflow-y-auto'\r\n        initialFocus={cancelButtonRef}\r\n        open={open}\r\n        onClose={setOpen}>\r\n        <div className='flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0'>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter='ease-out duration-300'\r\n            enterFrom='opacity-0'\r\n            enterTo='opacity-100'\r\n            leave='ease-in duration-200'\r\n            leaveFrom='opacity-100'\r\n            leaveTo='opacity-0'>\r\n            <Dialog.Overlay className='fixed inset-0 transition-opacity bg-gray-500 bg-opacity-80 ' />\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span\r\n            className='hidden sm:inline-block sm:align-middle sm:h-screen'\r\n            aria-hidden='true'>\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter='ease-out duration-300'\r\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\r\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\r\n            leave='ease-in duration-200'\r\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\r\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'>\r\n            <div className='inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\r\n              <div className='sm:flex sm:items-start'>\r\n                <div className='flex items-center justify-center flex-shrink-0 w-12 h-12 mx-auto bg-red-100 rounded-full sm:mx-0 sm:h-10 sm:w-10'>\r\n                  <ExclamationIcon\r\n                    className='w-6 h-6 text-red-600'\r\n                    aria-hidden='true'\r\n                  />\r\n                </div>\r\n                <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\r\n                  <Dialog.Title\r\n                    as='h3'\r\n                    className='text-lg font-medium leading-6 text-gray-900'>\r\n                    {props.title}\r\n                  </Dialog.Title>\r\n                  <div className='mt-2'>\r\n                    <p className='text-sm text-gray-500'>{props.content}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\r\n                {props.actions}\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n","/** @format */\r\n\r\n// /** @format */\r\n\r\n// /** @format */\r\nimport React from \"react\";\r\nimport { useRef, useState, useContext } from \"react\";\r\n\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nimport DashboardScreen from \"../../screens/DashboardScreen\";\r\nimport StandardModal from \"./StandardModal\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\nconst DeleteTransactionModal = ({ match, history }) => {\r\n  //   const dispatch = useDispatch();\r\n  const transactionId = match.params.id;\r\n  const [open, setOpen] = useState(true);\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  if (!open) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    deleteTransaction(id);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const actions = (\r\n    <React.Fragment>\r\n      <button\r\n        type='button'\r\n        className='inline-flex justify-center w-full px-4 py-2 text-base font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm'\r\n        onClick={() => deleteHandler(transactionId)}>\r\n        Delete\r\n      </button>\r\n      <Link\r\n        to='/'\r\n        type='button'\r\n        className='inline-flex justify-center w-full px-4 py-2 mt-3 text-base font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm'\r\n        onClick={() => setOpen(false)}\r\n        ref={cancelButtonRef}>\r\n        Cancel\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <DashboardScreen />\r\n\r\n      <StandardModal\r\n        title='Delete Transaction'\r\n        content='Are you sure you want to delete this transaction?'\r\n        actions={actions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteTransactionModal;\r\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport DashboardScreen from \"./screens/DashboardScreen\";\nimport TrendScreen from \"./screens/TrendScreen\";\n\nimport history from \"./history\";\nimport AddTransactionModal from \"./components/Modals/AddTransactionModal\";\nimport DeleteTransactionModal from \"./components/Modals/DeleteTransactionModal\";\nimport EditTransactionModal from \"./components/Modals/EditTransactionModal\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router history={history}>\n        <Switch>\n          <Route exact path='/' component={DashboardScreen} />\n          <Route path='/transactions/trends' component={TrendScreen} />\n          <Route path='/transactions/add' component={AddTransactionModal} />\n          <Route\n            path='/transactions/:id/delete'\n            component={DeleteTransactionModal}\n          />\n          <Route\n            path='/transactions/:id/edit'\n            component={EditTransactionModal}\n          />{\" \"}\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}